#!/usr/bin/env node

var fs = require('fs');
var app = require('../app');
var debug = require('debug')('smarthouse-api:server');
var https = require('https');

var options = {
    key: fs.readFileSync('./ressources/key.pem'),
    cert: fs.readFileSync( './ressources/cert.pem' )
};

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

var server = https.createServer(options, app);
server.listen(port);

server.on('error', (error) => {

    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
});

server.on('listening', () => {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
});

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
};